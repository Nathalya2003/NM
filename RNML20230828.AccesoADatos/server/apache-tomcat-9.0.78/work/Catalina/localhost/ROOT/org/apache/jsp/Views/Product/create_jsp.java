/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-08-27 04:37:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Views.Product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import fixnimartjava.entitdadesdenegocio.Product;

public final class create_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("fixnimartjava.entitdadesdenegocio.Product");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
 Product product = (Product) request.getAttribute("product");
    product = product != null ? product : new Product();

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>        \n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/Views/Shared/title.jsp", out, false);
      out.write("\n");
      out.write("        <title>Crear Producto</title>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/Views/Shared/headerBody.jsp", out, false);
      out.write("  \n");
      out.write("        <main class=\"container\">   \n");
      out.write("            <h5>Crear Producto</h5>\n");
      out.write("            <form action=\"Product\" method=\"post\" >\n");
      out.write("                <input type=\"hidden\" name=\"accion\" value=\"");
      out.print(request.getAttribute("accion"));
      out.write("\">\n");
      out.write("                <input type=\"hidden\" value=\"\">   \n");
      out.write("                <span class=\"red-text\" ");
      out.print(request.getAttribute("existsBarCode") == null? "hidden": "" );
      out.write(">Codigo de barra existente</span>\n");
      out.write("\n");
      out.write("                <div class=\"row\">\n");
      out.write("                    <div class=\"input-field col l4 s12\">\n");
      out.write("                        <input  id=\"txtName\" type=\"text\" value=\"");
      out.print(product.getName() != null ? product.getName() : "");
      out.write("\" placeholder=\"Nombre\" name=\"name\" required class=\"validate\" >\n");
      out.write("                        <label for=\"txtName\"></label>\n");
      out.write("                    </div>                       \n");
      out.write("                    <div class=\"input-field col l4 s12\">\n");
      out.write("                        <input  id=\"txtDescription\" type=\"text\" value=\"");
      out.print(product.getDescription() != null ? product.getDescription() : "");
      out.write("\" placeholder=\"Descripcion\" name=\"description\" required class=\"validate\" maxlength=\"30\">\n");
      out.write("                        <label for=\"txtDescription\"></label>\n");
      out.write("                    </div> \n");
      out.write("                    <div class=\"input-field col l4 s12\">\n");
      out.write("                        <input  id=\"txtBarCode\" value=\"");
      out.print(product.getBarCode() != null ? product.getBarCode() : "");
      out.write("\" placeholder=\"Codigo de barra\" type=\"text\" name=\"barCode\" required class=\"validate\" maxlength=\"30\">\n");
      out.write("                        <label for=\"txtBarCode\"></label>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"input-field col l4 s12\">\n");
      out.write("                        <input  id=\"txtPrice\" type=\"number\" value=\"");
      out.print(product.getPrice() != 0.00 ? product.getPrice() : "");
      out.write("\" placeholder=\"Price\" name=\"price\" required class=\"validate\" step=\"0.01\" maxlength=\"25\">\n");
      out.write("                        <label for=\"txtPrice\"></label>\n");
      out.write("                    </div> \n");
      out.write("                    <div class=\"input-field col l4 s12\">\n");
      out.write("                        <input  id=\"txtStock\" type=\"number\" value=\"");
      out.print(product.getStock() != 0.00 ? product.getStock() : "");
      out.write("\" placeholder=\"Stock\" name=\"stock\" required class=\"validate\" >\n");
      out.write("                        <label for=\"txtStock\"></label>\n");
      out.write("                    </div> \n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div class=\"row\">\n");
      out.write("                    <div class=\"col l12 s12\">\n");
      out.write("                        <button type=\"submit\" class=\"waves-effect waves-light btn blue\"><i class=\"material-icons right\">save</i>Guardar</button>\n");
      out.write("                        <a href=\"Product\" class=\"waves-effect waves-light btn blue\"><i class=\"material-icons right\">list</i>Cancelar</a>                          \n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </form>          \n");
      out.write("        </main>\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/Views/Shared/footerBody.jsp", out, false);
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
